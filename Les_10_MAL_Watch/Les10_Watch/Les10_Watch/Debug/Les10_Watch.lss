
Les10_Watch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000000ba  0000014e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800074  00800074  00000162  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000005ca  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000501  00000000  00000000  000007c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000204  00000000  00000000  00000cc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  00000ec8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000031e  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000028  00000000  00000000  0000121a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001242  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ea eb       	ldi	r30, 0xBA	; 186
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 37       	cpi	r26, 0x74	; 116
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a4 e7       	ldi	r26, 0x74	; 116
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a6 37       	cpi	r26, 0x76	; 118
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	2d c0       	rjmp	.+90     	; 0xb6 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:
*/

int main(void)
{
    //Prescaler 64 for 1TC
    TCCR1B |=(1<<CS11)|(1<<CS10);
  5e:	8e b5       	in	r24, 0x2e	; 46
  60:	83 60       	ori	r24, 0x03	; 3
  62:	8e bd       	out	0x2e, r24	; 46
    TCCR1B &=~(1<<CS12);
  64:	8e b5       	in	r24, 0x2e	; 46
  66:	8b 7f       	andi	r24, 0xFB	; 251
  68:	8e bd       	out	0x2e, r24	; 46
    TCNT1 = 0;
  6a:	1d bc       	out	0x2d, r1	; 45
  6c:	1c bc       	out	0x2c, r1	; 44
	
	SEG7_DDR = 0xff;
  6e:	8f ef       	ldi	r24, 0xFF	; 255
  70:	87 bb       	out	0x17, r24	; 23
	SEG7_PORT =  0x00;
  72:	18 ba       	out	0x18, r1	; 24
	
    while (1) 
    {
		if (TCNT1 == 15625 )// 1 sec
  74:	8c b5       	in	r24, 0x2c	; 44
  76:	9d b5       	in	r25, 0x2d	; 45
  78:	89 30       	cpi	r24, 0x09	; 9
  7a:	9d 43       	sbci	r25, 0x3D	; 61
  7c:	d9 f7       	brne	.-10     	; 0x74 <main+0x16>
		{
			TCNT1 = 0;
  7e:	1d bc       	out	0x2d, r1	; 45
  80:	1c bc       	out	0x2c, r1	; 44
			
			//SEG7_PORT |= (1<<1) | (1<<0);	// Выключаем 1 и 2 разряды
			//SEG7_PORT &= ~(1<<2);			// ВКлючаем 3 разряд
			
			SEG7_PORT = digits[counter_seconds];
  82:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <__data_end>
  86:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <__data_end+0x1>
  8a:	ee 0f       	add	r30, r30
  8c:	ff 1f       	adc	r31, r31
  8e:	e0 5a       	subi	r30, 0xA0	; 160
  90:	ff 4f       	sbci	r31, 0xFF	; 255
  92:	80 81       	ld	r24, Z
  94:	88 bb       	out	0x18, r24	; 24
			
			
			
			counter_seconds++;
  96:	80 91 74 00 	lds	r24, 0x0074	; 0x800074 <__data_end>
  9a:	90 91 75 00 	lds	r25, 0x0075	; 0x800075 <__data_end+0x1>
  9e:	01 96       	adiw	r24, 0x01	; 1
  a0:	90 93 75 00 	sts	0x0075, r25	; 0x800075 <__data_end+0x1>
  a4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__data_end>
			
			if (counter_seconds == 10)
  a8:	0a 97       	sbiw	r24, 0x0a	; 10
  aa:	21 f7       	brne	.-56     	; 0x74 <main+0x16>
			{
				
				counter_seconds = 0;
  ac:	10 92 75 00 	sts	0x0075, r1	; 0x800075 <__data_end+0x1>
  b0:	10 92 74 00 	sts	0x0074, r1	; 0x800074 <__data_end>
  b4:	df cf       	rjmp	.-66     	; 0x74 <main+0x16>

000000b6 <_exit>:
  b6:	f8 94       	cli

000000b8 <__stop_program>:
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <__stop_program>
